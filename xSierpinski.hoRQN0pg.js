var C=Object.defineProperty;var R=(i,t,e)=>t in i?C(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var n=(i,t,e)=>R(i,typeof t!="symbol"?t+"":t,e);import{d as x,_ as b,c as f,a,b as r,w as v,v as I,i as D,f as F,F as S,h as k,o as m,p as U,e as B}from"./xindex.nwv0rKjI.js";const g={fromRGB(i,t,e){return 255<<24|e<<16|t<<8|i},toRGB(i){return{r:i&255,g:i>>8&255,b:i>>16&255}}};function p(){let i=1;const t=window.screen;return t.systemXDPI!==void 0&&t.logicalXDPI!==void 0&&t.systemXDPI>t.logicalXDPI?i=t.systemXDPI/t.logicalXDPI:window.devicePixelRatio!==void 0&&(i=window.devicePixelRatio),i}class A{constructor(t=0){n(this,"callsPerSecond");n(this,"interval");n(this,"_isDestroyed");n(this,"callCount",0);n(this,"timer");this.callsPerSecond=t,this.interval=this.callsPerSecond<=50&&this.callsPerSecond!==0?20:0,this._isDestroyed=!1}destroy(){this._isDestroyed=!0,clearTimeout(this.timer)}each(t){const s=new Date().getTime();this.callCount=0;const h=()=>{const c=new Date().getTime();for(;!this._isDestroyed;){const u=new Date().getTime();if(this.callsPerSecond!==0){const d=(u-s)*this.callsPerSecond/1e3;if(this.callCount>=d)break}if(u-c>20)break;t(),this.callCount++}(()=>{const d=(new Date().getTime()-s)*this.callsPerSecond/1e3;this.callCount<d&&(this.callCount=d)})(),this._isDestroyed||(this.timer=setTimeout(h,this.interval))};h()}}function P(i,t){const e=new A(t);return e.each(i),e}class l{constructor(t,e,s){n(this,"width");n(this,"height");n(this,"uint32");n(this,"uint8");n(this,"isPaused",!1);n(this,"_fastPutBuffer");this.width=t,this.height=e,this._createBuffer(),s&&this.loadFromUnknownType(s)}_createBuffer(){const t=new ArrayBuffer(this.width*this.height*4);this.uint32=new Uint32Array(t),this.uint8=new Uint8ClampedArray(t)}loadFromUnknownType(t){t instanceof Uint32Array?this.loadFrom1dArray(t):t instanceof Uint8ClampedArray?this.loadFromUint8ClampedArray(t):typeof t=="function"?this.loadFromFunction(t):typeof t!==null&&(t instanceof Array?t[0]instanceof Array?this.loadFrom2dArray(t):this.loadFrom1dArray(t):this.loadFromInteger(t))}loadFromInteger(t){const e=this.width*this.height;for(let s=0;s<e;++s)this.uint32[s]=+t}loadFrom1dArray(t){const e=this.width*this.height;for(let s=0;s<e;++s)this.uint32[s]=t[s]}loadFrom2dArray(t){const e=this.width*this.height;for(let s=0;s<e;++s)this.uint32[s]=t[~~(s/this.width)][s%this.width]}loadFromUint8ClampedArray(t){const e=this.width*this.height;for(let s=0;s<e*4;++s)this.uint8[s]=t[s]}loadFromFunction(t){const e=this.width*this.height;for(let s=0;s<e;++s)this.uint32[s]=t(s,this.width,this.height,e)}static createFromImageUrl(t,e){const s=document.createElement("img");s.src=t,s.onload=()=>{e(l.createFromImage(s))}}static createFromImage(t){const e=document.createElement("canvas"),s=e.getContext("2d");return e.width=t.width,e.height=t.height,s.drawImage(t,0,0),l.createFromCanvas(e)}static createFromCanvas(t){const e=t.getContext("2d").getImageData(0,0,t.width,t.height);return l.createFromImageData(e,t.width,t.height)}static createFromImageData(t,e,s){return new l(e,s,t.data)}clone(){return new l(this.width,this.height,this.uint8)}toCanvas(t){t=t||document.createElement("canvas"),t.width=this.width,t.height=this.height;const e=t.getContext("2d");return this.toContext(e),t}toContext(t){(!this._fastPutBuffer||this._fastPutBuffer.width!==this.width||this._fastPutBuffer.height!==this.height)&&(this._fastPutBuffer=t.createImageData(this.width,this.height)),this._fastPutBuffer.data.set(this.uint8),t.putImageData(this._fastPutBuffer,0,0)}resizeTo(t,e){const s=this.toCanvas();this.isPaused=!0,this.width=t,this.height=e,this._createBuffer(),this.isPaused=!1,(c=>{const o=document.createElement("canvas");o.width=this.width,o.height=this.height;const u=o.getContext("2d");u.drawImage(c,0,0,this.width,this.height);const d=u.getImageData(0,0,this.width,this.height).data;for(let w=0;w<d.length;w++)this.uint8[w]=d[w]}).call(this,s)}}const T=l;class _ extends T{constructor(e,s=25,h=!0){super(e.width,e.height);n(this,"canvas");n(this,"fps");n(this,"hiRes");n(this,"redrawRate");n(this,"context");n(this,"constantly");n(this,"canvasUpdateIsRequired",!1);this.canvas=e,this.fps=s,this.hiRes=h,this.redrawRate=20,this.context=e.getContext("2d"),this.refresh(),this.constantly=P(()=>{this.canvasUpdateIsRequired&&this.update()},this.fps)}refresh(e,s){e=e||Math.round(this.canvas.offsetWidth*(this.hiRes?p():1)),s=s||Math.round(this.canvas.offsetHeight*(this.hiRes?p():1)),this.canvas.width=e,this.canvas.height=s,this.resizeTo(e,s)}destroy(){this.constantly&&(this.constantly.destroy(),this.constantly=null)}update(){this.toContext(this.context),this.canvasUpdateIsRequired=!1}getCanvasPoint(e,s){return{x:e*(this.hiRes?p():1),y:s*(this.hiRes?p():1)}}}class G extends _{constructor(t,e=25,s=!0){super(t,e,s)}clear(t){const e=this.width*this.height;for(let s=0;s<e;s++)this.uint32[s]=t;this.canvasUpdateIsRequired=!0}getPoint(t,e){return this.uint32[~~e*this.width+~~t]}setPoint(t,e,s){this.uint32[~~e*this.width+~~t]=s,this.canvasUpdateIsRequired=!0}subtractPoint(t,e,s){const h=g.toRGB(this.getPoint(t,e)),c=g.toRGB(s);this.uint32[~~e*this.width+~~t]=g.fromRGB(Math.max(h.r-c.r,0),Math.max(h.g-c.g,0),Math.max(h.b-c.b,0)),this.canvasUpdateIsRequired=!0}}const W=x({name:"Sierpinski",setup(){return{width:void 0,height:void 0,canvasWriter:null,constantly:null,currentPoint:void 0}},data(){return{corners:[],snapshots:[],hiRes:!1,pointsPerSecond:1e3,darkGrey:g.fromRGB(64,64,64)}},mounted(){this.start()},beforeUnmount(){this.destroyChildObjects()},computed:{isHiResAvailable(){return p()!==1}},methods:{destroyChildObjects(){var i,t;(i=this.canvasWriter)==null||i.destroy(),(t=this.constantly)==null||t.destroy()},start(){this.destroyChildObjects();const i=document.getElementById("sierpinski-canvas");this.canvasWriter=new G(i,void 0,this.hiRes),this.height=this.canvasWriter.height,this.width=this.canvasWriter.width,this.canvasWriter.clear(g.fromRGB(255,255,255));const t=this.width;this.corners=[],[{x:.5,y:0},{x:0,y:1},{x:1,y:1}].forEach(s=>this.corners.push({x:s.x*t,y:s.y*t})),this.currentPoint={x:this.corners[0].x,y:this.corners[0].y},this.constantly=P(()=>this.addPoint(),this.pointsPerSecond)},snapshot(){const i=this.canvasWriter.toCanvas().toDataURL();this.snapshots.push(i)},addPoint(){const i=this.corners[~~(Math.random()*this.corners.length)],t={x:(this.currentPoint.x+i.x)/2,y:(this.currentPoint.y+i.y)/2};this.canvasWriter.subtractPoint(t.x,t.y,this.darkGrey),this.currentPoint=t}}}),y=i=>(U("data-v-76c70067"),i=i(),B(),i),M=y(()=>r("h1",null,"Sierpinski",-1)),z=y(()=>r("p",null,"A html canvas drawing a Sierpinski Gasket with the Chaos Game method.",-1)),E=y(()=>r("figure",null,[r("canvas",{id:"sierpinski-canvas",width:"300",height:"300"})],-1)),$=y(()=>r("label",{for:"pointsPerSecond"},"points/sec",-1)),q={key:0,for:"hiRes"},X={class:"snapshots"},O=["src"];function V(i,t,e,s,h,c){return m(),f("section",null,[M,a(),z,a(),E,a(),r("fieldset",null,[$,a(),v(r("input",{id:"pointsPerSecond","onUpdate:modelValue":t[0]||(t[0]=o=>i.pointsPerSecond=o),type:"number"},null,512),[[I,i.pointsPerSecond,void 0,{number:!0}]]),a(),r("button",{type:"button",onClick:t[1]||(t[1]=o=>i.snapshot())},"Snapshot"),a(),r("button",{type:"button",onClick:t[2]||(t[2]=o=>i.start())},"Restart"),a(),i.isHiResAvailable?(m(),f("label",q,[v(r("input",{id:"hiRes","onUpdate:modelValue":t[3]||(t[3]=o=>i.hiRes=o),type:"checkbox",onClick:t[4]||(t[4]=(...o)=>i.start&&i.start(...o))},null,512),[[D,i.hiRes]]),a(`
        hi-res
      `)])):F("",!0)]),a(),r("div",X,[(m(!0),f(S,null,k(i.snapshots,o=>(m(),f("div",{key:o,class:"snapshot"},[(m(),f("img",{src:o,key:o},null,8,O))]))),128))])])}const N=b(W,[["render",V],["__scopeId","data-v-76c70067"]]);export{N as default};
